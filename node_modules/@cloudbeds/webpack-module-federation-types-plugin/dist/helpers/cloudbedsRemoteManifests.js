"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRemoteManifestUrls = void 0;
const constants_1 = require("../constants");
const validation_1 = require("./validation");
function getRemoteManifestUrls(options) {
    if (options?.cloudbedsRemoteManifestsBaseUrl !== undefined) {
        let artifactsBaseUrl = '';
        let manifestBaseUrl = options.cloudbedsRemoteManifestsBaseUrl;
        if (!(0, validation_1.isValidUrl)(manifestBaseUrl)) {
            if (['stage', 'stage-ga'].includes(manifestBaseUrl)) {
                artifactsBaseUrl = `${constants_1.CloudbedsCloudfrontDomain.Stage}/builds`;
                manifestBaseUrl = `${constants_1.CloudbedsCloudfrontDomain.Stage}/remotes/stage-ga/{version}`;
            }
            else if (['prod', 'prod-ga'].includes(manifestBaseUrl)) {
                artifactsBaseUrl = `${constants_1.CloudbedsCloudfrontDomain.Prod}/builds`;
                manifestBaseUrl = `${constants_1.CloudbedsCloudfrontDomain.Prod}/remotes/prod-ga/{version}`;
            }
            else {
                artifactsBaseUrl = `${constants_1.CloudbedsCloudfrontDomain.Dev}/branches`;
                manifestBaseUrl = `${constants_1.CloudbedsCloudfrontDomain.Dev}/remotes/dev-ga`;
            }
        }
        return {
            ...(artifactsBaseUrl ? { artifactsBaseUrl } : null),
            registry: `${manifestBaseUrl}/${constants_1.CLOUDBEDS_REMOTES_MANIFEST_FILE_NAME}`,
            ...options?.remoteManifestUrls,
        };
    }
    if (options?.remoteManifestUrl) {
        return {
            ...options?.remoteManifestUrls,
            registry: options?.remoteManifestUrl,
        };
    }
    return options?.remoteManifestUrls;
}
exports.getRemoteManifestUrls = getRemoteManifestUrls;
//# sourceMappingURL=cloudbedsRemoteManifests.js.map