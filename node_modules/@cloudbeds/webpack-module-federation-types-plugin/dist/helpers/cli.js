"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFederationConfig = exports.assertRunningFromRoot = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const constants_1 = require("../constants");
function assertRunningFromRoot() {
    if (!fs_1.default.readdirSync('./').includes('node_modules')) {
        console.error('ERROR: Script must be run from the root directory of the project');
        process.exit(1);
    }
}
exports.assertRunningFromRoot = assertRunningFromRoot;
function getFederationConfig(customConfigPath) {
    const federationConfigPath = path_1.default.resolve(customConfigPath || constants_1.FEDERATION_CONFIG_FILE);
    if (!federationConfigPath) {
        console.error(`ERROR: Could not find ${constants_1.FEDERATION_CONFIG_FILE} in project's root directory`);
        process.exit(1);
    }
    const config = require(federationConfigPath);
    if (!config || !Object.keys(config?.exposes || {}).length) {
        console.error(`ERROR: Invalid ${constants_1.FEDERATION_CONFIG_FILE}`);
        process.exit(1);
    }
    console.log(`Using config file: ${federationConfigPath}`);
    return config;
}
exports.getFederationConfig = getFederationConfig;
//# sourceMappingURL=cli.js.map